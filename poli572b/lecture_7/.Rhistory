install.packages('ggdag')
install.packages('ggdag', repos = https://mirror.its.sfu.ca/mirror/CRAN/')
install.packages('ggdag', repos = 'https://mirror.its.sfu.ca/mirror/CRAN/')
install.packages('dagitty', repos = 'https://mirror.its.sfu.ca/mirror/CRAN/')
install.packages('dagitty', repos = 'https://mirror.its.sfu.ca/mirror/CRAN/')
install.packages('dagitty', repos = 'https://mirror.its.sfu.ca/mirror/CRAN/')
install.packages('dagitty', repos = 'https://mirror.its.sfu.ca/mirror/CRAN/')
?install.packages
install.packages('V8', repos = 'https://mirror.its.sfu.ca/mirror/CRAN/', configure.vars = 'INCLUDE_DIR=/usr/include LIB_DIR=/usr/lib')
install.packages('dagitty', repos = 'https://mirror.its.sfu.ca/mirror/CRAN/')
install.packages('ggm', repos = 'https://mirror.its.sfu.ca/mirror/CRAN/')
require(ggm)
DAG(y ~ x + z + u, x ~ u, z ~ u)
install.packages('V8')
install.packages('V8')
n = 250
test = rnorm(n)
motivation = rnorm(n)
score = test + motivation
admit = score > quantile(score, probs = c(0.85))
plot_data = data.table(test, motivation, admit)
require(data.table)
plot_data = data.table(test, motivation, admit)
require(ggplot2)
plot_data = data.table(test, motivation, admit)
ggplot(plot_data, aes(x = test, y = motivation, shape = admit)) +
geom_point()
ggplot(plot_data, aes(x = test, y = motivation, color = admit)) +
geom_point()
n = 250
test = rnorm(n)
motivation = rnorm(n)
score = test + motivation
admit = ifelse(score > quantile(score, probs = c(0.85)), "Yes", "No")
plot_data = data.table(test, motivation, Admit =  admit)
ggplot(plot_data, aes(x = test, y = motivation, color = Admit)) +
geom_point() +
xlab("Test Score") +
ylab("Motivation")
plot_data = data.table(test, motivation, Admit =  admit)
ggplot(plot_data, aes(x = test, y = motivation, color = Admit)) +
geom_point() +
xlab("Test Score") +
ylab("Motivation") + theme_bw()
setwd('/home/mdweaver/Dropbox/POLI572b/lectures/lecture_7')
acs_data = fread("acs_lawmed.csv")
acs_data[, FEMALE := SEX]
acs_data[, MARST_f := as.factor(MARST)]
#acs_data = acs_data[sample(1:nrow(acs_data), size = 10000)]
acs_data[, MALE := abs(FEMALE - 1)]
acs_data[, sex := as.factor(ifelse(FEMALE == 1, 'Female', 'Male'))]
require(knitr)
require(magrittr)
require(kableExtra)
require(ggplot2)
require(grid)
require(data.table)
require(UsingR)
options("kableExtra.html.bsTable" = T)
acs_data = fread("acs_lawmed.csv")
acs_data[, FEMALE := SEX]
acs_data[, MARST_f := as.factor(MARST)]
#acs_data = acs_data[sample(1:nrow(acs_data), size = 10000)]
acs_data[, MALE := abs(FEMALE - 1)]
acs_data[, sex := as.factor(ifelse(FEMALE == 1, 'Female', 'Male'))]
UHRSWORK_star = lm(UHRSWORK ~ AGE, acs_data)$residuals
acs_data$hrs_r = UHRSWORK_star
acs_data$inc_r = lm_hours_age$residuals
lm_hours_age = lm(INCEARN ~ UHRSWORK + AGE, acs_data)
acs_data$hrs_r = UHRSWORK_star
acs_data$inc_r = lm_hours_age$residuals
plot(acs_data, aes(x = hrs_r, y = inc_r)) + geom_smooth
plot(acs_data, aes(x = hrs_r, y = inc_r)) + geom_smooth()
acs_data$hrs_r
acs_data$inc_r
ggplot(acs_data, aes(x = hrs_r, y = inc_r)) + geom_smooth()
ggplot(acs_data, aes(x = AGE, y = INCEARN)) + geom_smooth()
ggplot(acs_data, aes(x = AGE, y = UHRSWORK)) + geom_smooth()
ggplot(acs_data, aes(x = inc_r, y = AGE)) + geom_smooth()
ggplot(acs_data, aes(x = hrs_r, y = AGE)) + geom_smooth()
ggplot(acs_data, aes(x = UHRSWORK, y = AGE)) + geom_smooth()
ggplot(acs_data, aes(x = AGE, y = UHRSWORK)) + geom_smooth()
ggplot(acs_data, aes(x = hrs_r, y = AGE)) + geom_smooth()
UHRSWORK_star2 = lm(UHRSWORK ~ as.factor(AGE), acs_data)$residuals
acs_data$hrs_r_2 = UHRSWORK_star2
ggplot(acs_data, aes(x = hrs_r_2, y = AGE)) + geom_smooth()
ggplot(acs_data, aes(x = hrs_r, y = AGE)) + geom_smooth()
ggplot(acs_data, aes(x = AGE, y = hrs_r_2)) + geom_smooth()
ggplot(acs_data, aes(x = AGE, y = hrs_r)) + geom_smooth()
ggplot(acs_data, aes(x = AGE, y = inc_r)) + geom_smooth()
acs_data$inc_r_2 = lm(INCEARN ~ UHRSWORK + as.factor(AGE), acs_data)$residuals
ggplot(acs_data, aes(x = AGE, y = inc_r_2)) + geom_smooth()
ggplot(acs_data, aes(x = hrs_r_2, y = AGE)) + geom_smooth()
ggplot(acs_data, aes(x = AGE, y = UHRSWORK)) +  geom_hex() + geom_smooth() + theme_bw()
ggplot(acs_data, aes(x = AGE, y = UHRSWORK)) +  geom_hex() + geom_smooth() + theme_bw()
install.packages('hexbin')
ggplot(acs_data, aes(x = AGE, y = UHRSWORK)) +  geom_hex() + geom_smooth() + theme_bw()
ggplot(acs_data, aes(x = AGE, y = INCEARN)) + geom_smooth() + theme_bw() +
xlab("Age") + ylab("Annual Income ($)")
plot_data = acs_data[, UHRSWORK = mean(UHRSWORK), by = AGE]
ggplot(plot_data, aes(x = AGE, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Hours Worked")
plot_data = acs_data[, list(UHRSWORK = mean(UHRSWORK)), by = AGE]
ggplot(plot_data, aes(x = AGE, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Hours Worked")
plot_data = acs_data[, list(INCEARN = mean(INCEARN)), by = AGE]
ggplot(acs_data, aes(x = AGE, y = INCEARN)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Annual Income ($)")
plot_data = acs_data[, list(INCEARN = mean(INCEARN)), by = AGE]
ggplot(plot_data, aes(x = AGE, y = INCEARN)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Annual Income ($)")
acs_data[, UHRSWORK_star := lm(UHRSWORK ~ AGE, .SD)$residuals]
acs_data[, UHRSWORK_star2 := lm(UHRSWORK ~ as.factor(AGE), .SD)$residuals]
acs_data[, INCEARN_star := lm(INCEARN ~ AGE, .SD)$residuals]
acs_data[, INCEARN_star2 := lm(INCEARN ~ as.factor(AGE), .SD)$residuals]
plot_data = acs_data[, list(UHRSWORK = mean(UHRSWORK_star)), by = AGE]
ggplot(plot_data, aes(x = AGE, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked")
plot_data = acs_data[, list(UHRSWORK = mean(UHRSWORK_star)), by = AGE]
ggplot(plot_data, aes(x = AGE, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked") + geom_hline(yintercept = 0, color = 'red')
acs_data[, UHRSWORK_star := lm(UHRSWORK ~ AGE, .SD)$residuals]
acs_data[, UHRSWORK_star2 := lm(UHRSWORK ~ as.factor(AGE), .SD)$residuals]
acs_data[, INCEARN_star := lm(INCEARN ~ UHRSWORK + AGE, .SD)$residuals]
acs_data[, INCEARN_star2 := lm(INCEARN ~ UHRSWORK + as.factor(AGE), .SD)$residuals]
acs_data[, AGE_star := lm(AGE ~ UHRSWORK, .SD)$residuals]
ggplot(acs_data, aes(x = AGE_star, y = INCEARN_star)) + geom_smooth() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked") + geom_hline(yintercept = 0, color = 'red')
ggplot(acs_data, aes(x = AGE, y = INCEARN_star)) + geom_smooth() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked") + geom_hline(yintercept = 0, color = 'red')
plot_data$plot_data = acs_data[, list(UHRSWORK = mean(UHRSWORK_star)), by = AGE_star]
ggplot(plot_data, aes(x = AGE_star, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked") + geom_hline(yintercept = 0, color = 'red')
plot_data = acs_data[, list(UHRSWORK = mean(UHRSWORK_star)), by = AGE_star]
ggplot(plot_data, aes(x = AGE_star, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked") + geom_hline(yintercept = 0, color = 'red')
acs_data[, AGE_star := round(AGE_star)]
plot_data = acs_data[, list(UHRSWORK = mean(UHRSWORK_star)), by = AGE_star]
ggplot(plot_data, aes(x = AGE_star, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked") + geom_hline(yintercept = 0, color = 'red')
plot_data = acs_data[, list(INCEARN_star = mean(INCEARN_star)), by = AGE]
ggplot(plot_data, aes(x = AGE, y = INCEARN_star)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Annual Income ($)") + geom_hline(yintercept = 0, color = 'red')
acs_data[, r_hours := round(UHRSWORK_star)]
plot_data = acs_data[, list(INCEARN_star = mean(INCEARN_star)), by = r_hours]
ggplot(plot_data, aes(x = r_hours, y = INCEARN_star)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Annual Income ($)") + geom_hline(yintercept = 0, color = 'red')
ggplot(acs_data, aes(x = UHRSWORK_star, y = INCEARN_star)) + geom_smooth() + theme_bw() +
xlab("Age") + ylab("Mean Residual Annual Income ($)") + geom_hline(yintercept = 0, color = 'red')
ggplot(acs_data, aes(x = UHRSWORK_star, y = INCEARN_star)) + geom_smooth() + theme_bw() +
xlab("Residual Hours Worked") + ylab("Mean Residual Annual Income ($)") + geom_hline(yintercept = 0, color = 'red')
plot_data = acs_data[, list(UHRSWORK = mean(UHRSWORK_star)), by = AGE]
ggplot(plot_data, aes(x = AGE_star, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked") + geom_hline(yintercept = 0, color = 'red')
plot_data = acs_data[, list(UHRSWORK = mean(UHRSWORK_star)), by = AGE]
ggplot(plot_data, aes(x = AGE, y = UHRSWORK)) + geom_point() + theme_bw() +
xlab("Age") + ylab("Mean Residual Hours Worked") + geom_hline(yintercept = 0, color = 'red')
ggplot(acs_data, aes(x = UHRSWORK_star2, y = INCEARN_star2)) + geom_smooth() + theme_bw() +
xlab("Residual Hours Worked") + ylab("Mean Residual Annual Income ($)") + geom_hline(yintercept = 0, color = 'red')
acs_data[, UHRSWORK_star2 := lm(UHRSWORK ~ as.factor(AGE), .SD)$residuals]
acs_data[, INCEARN_star2 := lm(INCEARN ~ UHRSWORK + as.factor(AGE), .SD)$residuals]
cor(acs_data[, UHRSWORK_star2, INCEARN_star2])
ggplot(acs_data, aes(x = UHRSWORK_star2, y = INCEARN_star2)) + geom_smooth() + theme_bw() +
xlab("Residual Hours Worked") + ylab("Mean Residual Annual Income ($)") + geom_hline(yintercept = 0, color = 'red')
ggplot(acs_data, aes(x = UHRSWORK_star, y = INCEARN_star)) + geom_smooth() + theme_bw() +
xlab("Residual Hours Worked") + ylab("Mean Residual Annual Income ($)") + geom_hline(yintercept = 0, color = 'red')
ggplot(acs_data, aes(x = UHRSWORK_star2, y = INCEARN)) + geom_smooth() + theme_bw() +
xlab("Residual Hours Worked") + ylab("Mean Residual Annual Income ($)") + geom_hline(yintercept = 0, color = 'red')
z = rnorm(100)
x = rbinom(100, prob = ifelse(z > 0, 0.95, 0))
x = rbinom(100, 1 prob = ifelse(z > 0, 0.95, 0))
z = rnorm(100)
x = rbinom(100, 1 , prob = ifelse(z > 0, 0.95, 0))
x
plot(z, x)
z = rnorm(100)
x = rbinom(100, 1 , prob = ifelse(z > 0, 1, 0))
plot(z, x)
y = 1 + z * 2 + x * 1 + x*z*-1 + rnorm(100)
plot(z, y)
y = 1 + z * 0.5 + x * 1 + x*z*-1 + rnorm(100)
plot(z, y)
y = 1 + z * 0.5 + x * 2 + x*z*-1 + rnorm(100)
plot(z, y)
y = 1 + z * 0.5 + x * 2 + x*z*-1 + rnorm(100, sd = 0.5)
plot(z, y)
n = 250
z = rnorm(n)
x = rbinom(n, 1 , prob = ifelse(z > 0, 1, 0))
y = 1 + z * 0.5 + x * 2 + x*z*-1 + rnorm(n, sd = 0.5)
plot(z, y)
plot(z,y, type = 'n')
points(z,y,pch = x + 1)
plot(z,y, type = 'n')
points(z,y,pch = x + 1)
plot_data = data.table(z,x,y)
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point() + geom_abline(slope = c(0.5, -0.5), intercept = c(1,3))
plot_data = data.table(z,x = as.factor(x),y)
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point() + geom_abline(slope = c(0.5, -0.5), intercept = c(1,3))
ggplot(plot_data, aes(x = z, y = y, color = x, group = x)) + geom_point() +
geom_smooth(method = 'lm')
?geom_smooth
ggplot(plot_data, aes(x = z, y = y, color = x, group = x)) + geom_point() +
geom_smooth(method = 'lm', se = F, fullrange = T)
y = 1 + z * 0.25 + x * 1 + x*(z^1.5)*1 + rnorm(n, sd = 0.5)
plot_data = data.table(z,x = as.factor(x),y)
ggplot(plot_data, aes(x = z, y = y, color = x, group = x)) + geom_point() +
geom_smooth(method = 'lm', se = F, fullrange = T) + theme_bw()
z^1.5
y = 1 + z * 0.25 + x * 1 + x*(z^2)*1 + rnorm(n, sd = 0.5)
plot_data = data.table(z,x = as.factor(x),y)
ggplot(plot_data, aes(x = z, y = y, color = x, group = x)) + geom_point() +
geom_smooth(method = 'lm', se = F, fullrange = T) + theme_bw()
y = 1 + z * 0.25 + x * 2 + x*(z^2)*0.5 + rnorm(n, sd = 0.5)
plot_data = data.table(z,x = as.factor(x),y)
ggplot(plot_data, aes(x = z, y = y, color = x, group = x)) + geom_point() +
geom_smooth(method = 'lm', se = F, fullrange = T) + theme_bw()
y = 1 + z * 0.25 + x * 1.5 + x*(z^2)*0.5 + rnorm(n, sd = 0.5)
plot_data = data.table(z,x = as.factor(x),y)
ggplot(plot_data, aes(x = z, y = y, color = x, group = x)) + geom_point() +
geom_smooth(method = 'lm', se = F, fullrange = T) + theme_bw()
y = 1 + z * 0.25 + x * 1 + x*(z^2)*0.5 + rnorm(n, sd = 0.5)
plot_data = data.table(z,x = as.factor(x),y)
ggplot(plot_data, aes(x = z, y = y, color = x, group = x)) + geom_point() +
geom_smooth(method = 'lm', se = F, fullrange = T) + theme_bw()
y = 1 + z * 0.25 + x * 1.5 + x*(z^2)*0.5 + rnorm(n, sd = 0.5)
plot_data = data.table(z,x = as.factor(x),y)
ggplot(plot_data, aes(x = z, y = y, color = x, group = x)) + geom_point() +
geom_smooth(method = 'lm', se = F, fullrange = T) + theme_bw()
