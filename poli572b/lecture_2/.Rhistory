require(ri)
choose(6,3)
knitr::opts_chunk$set(echo = TRUE)
require(knitr)
require(magrittr)
require(ri)
require(kableExtra)
require(data.table)
randomizations = combn(6,3,simplify = T) %>% t
randomizations
combn(6,3)
?combn
install.packages('ri2')
knitr::opts_chunk$set(echo = TRUE)
require(knitr)
require(magrittr)
require(ri)
require(kableExtra)
require(data.table)
require(data.table) #data.table function
p_o_table = data.table(region_i = 1:6,
y_i_1 = c(3,4,4,2,2,4),
y_i_0 = c(2,4,2,3,4,1)
)
p_o_table$tau_i = p_o_table$y_i_1 - p_o_table$y_i_0
p_o_table[, tau_i := y_i_1 - y_i_0]
knitr::opts_chunk$set(echo = TRUE)
require(knitr)
require(magrittr)
require(ri2)
require(kableExtra)
require(data.table)
randomizations = combn(6,3,simplify = T) %>% t
ts = randomizations[2,]
y = p_o_table[, ifelse(region_i %in% ts, y_i_1, y_i_0)]
Z = p_o_table[, region_i %in% ts]
exp_data = data.frame(Y = y, Z = Z)
declaration <- declare_ra(N = nrow(p_o_table), m = 3
ri2_out <- conduct_ri(
declaration <- declare_ra(N = nrow(p_o_table), m = 3)
ri2_out <- conduct_ri(
formula = Y ~ Z,
declaration = declaration,
sharp_hypothesis = 0,
data = exp_data
)
ri2_out
exp_data
Z = p_o_table[, 1*(region_i %in% ts)]
exp_data = data.frame(Y = y, Z = Z)
ri2_out <- conduct_ri(
formula = Y ~ Z,
declaration = declaration,
sharp_hypothesis = 0,
data = exp_data
)
ri2_out
ri2_out$p
ri2_out %>% summary
ri2_out %>% summary %>% [3]
ri2_out %>% summary %>% .[3]
>dt
?dt
?t.test
randomizations[,2]
randomizations[2,]
ace_hat
?t
?pt
y1s = p_o_table[region_i %in% c(1,2,4), y_i_1]
y0s = p_o_table[!(region_i %in% c(1,2,4)), y_i_0]
?t.test
t.test(y1s, y0s)
t.test(y1s, y0s)$df
t.test(y1s, y0s) %>% names
t.test(y1s, y0s) %>% parameter
t.test(y1s, y0s)$ parameter
ace_hat = mean(y1s) - mean(y0s)
var_y_10 = function(y) {
m = length(y)
mean_y = mean(y)
1/(m-1)*sum((y-mean_y)^2)
}
#Variance Y(1)
var_y_10(y1s)
#Variance Y(0)
var_y_10(y0s)
var_y_tc = function(y) {
var_y_hat = var_y_10(y)
var_y_hat/length(y)
}
#Var Y_T (treatment group sample mean)
var_y_tc(y1s)
#Var Y_C (control group sample mean)
var_y_tc(y0s)
var_ace_hat = function(y1, y0) {
var_y_tc(y1) + var_y_tc(y0)
}
#Variance ACE hat (our estimate)
var_ace_hat(y1s, y0s)
se_ace = var_ace_hat(y1s, y0s) %>% sqrt
t = (ace_hat - 0)/se_ace
t
df = t.test(y1s, y0s)$parameter
pt(t, df = df, upper.tail)
pt(t, df = df, upper.tail = T)
pt(t, df = df, lower.tail = F)
hist(ace_hats - mean(ace_hats),
xlab = "ACE-hat",
main = "Sampling Distribution of ACE-hat\nassuming the null",
breaks = 20)
?dt
?seq
hist(ace_hats - mean(ace_hats),
xlab = "ACE-hat",
main = "Sampling Distribution of ACE-hat\nassuming the null",
breaks = 20)
?hist
conduct_ri
?conduct_ri
regions %in% t_group
regions = 1:6
t_group = c(2,4,6)
regions %in% t_group
