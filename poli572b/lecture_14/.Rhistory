library(geojsonsf)
require(ggplot2)
require(ggspatial)
setwd("/home/mdweaver/Dropbox/swingAroundTheCircle")
## Loading Geojson file #1 (geojson_sf loads it directly as sf object)
#crs is 102003 so that we project from lat/long to a 'planar' projection to use intersection/distance tools.
stops = geojson_sf( "./cleaning/datapoint_swingaroundthestate.geojson") %>%
st_transform(crs = "ESRI:102003")
## Loading Boundaries
boundaries = st_read('./US_HistCounties_Gen01_Shapefile',
'US_HistCounties_Gen01') %>%
st_transform(crs = "ESRI:102003") %>%
as.data.table
bt = boundaries[START_DATE <= "1860-01-01" & END_DATE >= "1860-01-01",]
bt[, b_id := 1:.N]
bt[, target_state := STATE_TERR %>% toupper %>% str_replace("\\sTERRITORY$", "")]
bt[, target_name := NAME %>% as.character %>% toupper %>% str_replace("\\([^)]+\\)$","") %>% str_trim]
p_in_county = st_intersects(stops$geometry, bt$geometry, sparse = F) %>%
#by column (county boundary), sum up number of stops
apply(2, sum)
bt[, stops := p_in_county]
ggplot(data = bt %>% st_sf, aes(fill = as.factor(stops ) )) +
geom_sf() +
scale_fill_grey() +
geom_sf(data = stops$geometry, size = 2, shape = 2, fill = "lightred", color = 'red') +
coord_sf(xlim = c(2e5, 2e6), ylim = c(0,1e6), expand = FALSE) +
theme_bw()
bt[stops > 0 & target_state %in% "ILLINOIS"]
bt[stops > 0 & target_state %in% "ILLINOIS", target_name]
bt[stops > 0 & target_state %in% "ILLINOIS", target_name]
bt[stops > 0 & target_state %in% "INDIANA", target_name]
install.packages("ggdag")
install.packages('ggraph')
install.packages('ggforce')
install.packages('polyclip')
devtools::install('polyclip')
install.packages('devtools')
devtools::install('polycip')
devtools::install('polyclip')
install.packages('ggdag')
install.packages('revealjs')
19 * 20 * 50
19 * 20 * 5
19 * 5
19 * 5 * 50
19 * 5 * 50 * 4
length(388:581)
194 * 12
194 * 10
194 * 12
cf = causal_forest(dat[, 1:4], dat[, 5], dat[, 7] - dat[, 2],
sample.weights = n,
tune.parameters = 'all',
num.trees = 10000)
average_partial_effect(cf)
sqrt(0.42*(1-0.42))
sqrt(0.42*(1-0.42)) / sqrt(1000)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='mdweaver', token='E1CC9565B150017D5BA34D60F1AB29CB', secret='Gl+cmwE91+lG5sWKAXqsR8qSR/hiZ4i6OBicmn8b')
p <- ggplot(dataset(), aes_string(x=input$x, y=input$y)) + geom_point()
c_values = rnorm(600)
input$sampleSize = 10
input = list(sampleSize=10)
lapply(1:input$sampleSize,
sample(c_values, size = 10) %>% mean)
require(magritty)
require(magrittr)
lapply(1:input$sampleSize,
sample(c_values, size = 10) %>% mean)
lapply(1:input$sampleSize, function(x)
sample(c_values, size = 10) %>% mean)
lapply(1:input$sampleSize, function(x)
sample(c_values, size = 10) %>% mean) %>% unlist
install.packages("shiny")
library(shiny)
library(ggplot2)
require(httr)
require(data.table)
require(magrittr)
runApp('Dropbox/POLI110/shiny')
httr:config
?config
?deployApp
?set_config
?sample
sample(x = c_values, size = 10) %>% mean)
sample(x = c_values, size = 10)
z = rpois(100, 6)
x = 2 + 0.5*z - 0.25*x^2 + rnorm(100)
require(knitr)
require(magrittr)
require(kableExtra)
require(ggplot2)
require(grid)
require(data.table)
require(UsingR)
require(ggdag)
options("kableExtra.html.bsTable" = T)
acs_data = fread("acs_lawmed.csv")
acs_data[, FEMALE := SEX]
acs_data[, MARST_f := as.factor(MARST)]
acs_data[, MALE := abs(FEMALE - 1)]
acs_data[, sex := as.factor(ifelse(FEMALE == 1, 'Female', 'Male'))]
x = 2 + 0.5*z - 0.25*z^2 + rnorm(100)
z
plot(z,x)
x = 2 + 0.5*z - 0.5*z^2 + rnorm(100)
plot(z,x)
z = rpois(100, 6)
x = 2 + 0.1*z - 0.1*z^2 + rnorm(100)
plot(z,x)
x = 2 + 0.1*z - 0.2*z^2 + rnorm(100)
plot(z,x)
x = 2 + 0.05*z - 0.2*z^2 + rnorm(100)
plot(z,x)
x = 2 + -0.05*z - 0.2*z^2 + rnorm(100)
plot(z,x)
x = 4 + -0.05*z - 0.2*z^2 + rnorm(100)
plot(z,x)
x = 4 + -0.05*z - z^2 + rnorm(100)
plot(z,x)
x = 4 + -0.05*z - 0.2*z^2 + rnorm(100)
plot(z,x)
z = rnorm(100) %>% round
z
?rnorm
z = rnorm(100, sd = 2) %>% round
z = rnorm(100, sd = 2) %>% round
x = 4 + -0.5*z - 0.5*z^2 + rnorm(100)
plot(z,x)
x = 4 + 0.5*z - 0.5*z^2 + rnorm(100)
plot(z,x)
x = 4 + 0.75*z - 0.5*z^2 + rnorm(100)
plot(z,x)
x = 4 + 0.75*z - 0.5*z^2 + rnorm(100, sd= 2)
plot(z,x)
y = 2 + x + -0.5*z + rnorm(100)
plot(x, y)
plot(z, y)
x_star = lm(x ~ z)$residuals
plot(x_star, y)
lm(y ~ x)
lm(y ~ x + z)
y = 2 + x + -0.5*z+ z^2 + rnorm(100)
lm(y ~ x + z)
lm(y ~ x + z)
plot(x, y)
plot(z,x)
plot(z, y)
abline(lm(x ~ z))
hist(x)
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(100, sd= 2))/2) %>% plogis
x
x %>% hist
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(100, sd= 2))/3) %>% plogis
x %>% hist
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(100, sd= 2))/3) %>% plogis %>% rbinom(n = 100, prob = .)
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(100, sd= 2))/3) %>% plogis %>% rbinom(n = 100, size = 1, prob = .)
x
?rbinom
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(100, sd= 2))/3) %>% plogis
%>% rbinom(n = 100, size = 1, prob = .)
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(100, sd= 2))/3) %>% plogis
xt  = x%>% rbinom(n = 100, size = 1, prob = .)
plot(x, xt)
lm(xt ~ x)
n = 100
z = rnorm(n, sd = 2) %>% round
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(n, sd= 2))/3) %>% plogis %>% rbinom(n = n, size = 1, prob = .)
y = 2 + x + -0.5*z+ z^2 + rnorm(n)
plot(x, y)
plot(z,x)
lm(y ~ x + z)
lm(y ~ x + z + z^2)
y = 2 + x + -0.5*z+ z^2 + rnorm(n)
lm(y ~ x + z + z^2)
n = 100
z = rnorm(n, sd = 2) %>% round
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(n, sd= 2))/3) %>% plogis %>% rbinom(n = n, size = 1, prob = .)
y = 2 + x + -0.5*z+ z^2 + rnorm(n)
lm(y ~ x + z + z^2)
lm(y ~ x + z + I(z^2)
)
n = 100
z = rnorm(n, sd = 2) %>% round
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(n, sd= 2))/3) %>% plogis %>% rbinom(n = n, size = 1, prob = .)
z[x == 0] = z - 0.5
y = 2 + x + -0.5*z+ z^2 + rnorm(n)
n = 100
z = rnorm(n, sd = 2) %>% round
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(n, sd= 2))/3) %>% plogis %>% rbinom(n = n, size = 1, prob = .)
z[x == 0] = z[x==0] - 0.5
y = 2 + x + -0.5*z+ z^2 + rnorm(n)
plot(z, x)
loess(x ~ z) %>% plot
ggplot(data.frame(z,x), aes(x = z, y = x)) + geom_smooth
ggplot(data.frame(z,x), aes(x = z, y = x)) + geom_smooth()
n = 100
z = rnorm(n, sd = 2) %>% round
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(n, sd= 2))/3)
plot(z,x)
z = rnorm(n, sd = 2) %>% round
x = ((4 + z - 0.5*z^2 + rnorm(n, sd= 2))/3)
plot(z,x)
n = 100
z = rnorm(n, sd = 2) %>% round
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(n, sd= 2))/3)
plot(z,x)
pnorm
n = 100
z = rnorm(n, sd = 2) %>% round
x = ((4 + 0.75*z - 0.5*z^2 + rnorm(n, sd= 2))/3) %>% pnorm %>% rbinom(n = n, size = 1, prob = .)
z[x == 0] = z[x==0] - 0.5
y = 2 + x + -0.5*z+ z^2 + rnorm(n)
plot(x, y)
plot(z ,x)
plot(z ,y)
plot(z, y)
ggplot(data.frame(z, y, x), aes(x = z, y = y, color = x))
ggplot(data.frame(z, y, x), aes(x = z, y = y, color = x)) + geom_point()
y_r = lm(y ~ z)$residuals
lm(y_r ~ x)
lm(y ~ z + x)
m = lm(y ~ x + z)
y_alt = predict(m, newdata = data.frame(x = 1 - x, z = z))
y_alt
ggplot(data.frame(z, y, x, y_alt), aes(x = z, y = y, color = x)) + geom_point() + geom_point(aes(x = z, y = y_alt, alpha = 0.5))
ggplot(data.frame(z, y, x, y_alt), aes(x = z, y = y, color = x)) + geom_point() + geom_point(aes(x = z, y = y_alt), alpha = 0.5)
plot_data = data.table(z = z,
x = x %>% as.factor,
y = y,
y_alt = y_alt
)
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point()
?geom_point
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point() + geom_point(aes(x = z, y = y_alt), alpha = 0.5, stat = 'unique')
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point() + geom_point(aes(x = z, y = y_alt), alpha = 0.5, stat = 'unique') + theme_bw()
plot_data = data.table(z = z,
x = x %>% as.factor,
y = y,
y_alt = y_alt,
x_alt = (1 - x) %>% as.factor
)
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point() + geom_point(aes(x = z, y = y_alt, color = x_alt), alpha = 0.5, stat = 'unique') + theme_bw()
?geom_point
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point(size = 2) + geom_point(aes(x = z, y = y_alt, color = x_alt), alpha = 0.4, size = 2, stroke = 0, stat = 'unique') + theme_bw()
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point(size = 2) + geom_point(aes(x = z, y = y_alt, color = x_alt), alpha = 0.4, size = 4, stroke = 0, stat = 'unique') + theme_bw()
ggplot(plot_data, aes(x = z, y = y, color = x)) + geom_point(size = 2) + geom_point(aes(x = z, y = y_alt, color = x_alt), alpha = 0.4, size = 3, stroke = 0, stat = 'unique') + theme_bw()
ggplot(plot_data, aes(x = z, y = x)) + geom_jitter(size = 2) + geom_smooth()
ggplot(plot_data, aes(x = z, y = as.numeric(x))) + geom_jitter(size = 2) + geom_smooth()
ggplot(plot_data, aes(x = z, y = as.numeric(x))) + geom_jitter(size = 1, alpha = 0.5) + geom_smooth()
n = 100
x = rnorm(n, sd = 2) %>% round
d = ((4 + 0.75*x - 0.5*x^2 + rnorm(n, sd= 2))/3) %>% pnorm %>% rbinom(n = n, size = 1, prob = .)
x[d == 0] = x[d==0] - 0.5
y = 2 + d + -0.5*x+ x^2 + rnorm(n)
m = lm(y ~ d + x)
y_alt = predict(m, newdata = data.frame(d = 1 - d, x = x))
plot_data = data.table(x = x,
d = d %>% as.factor,
y = y,
y_alt = y_alt,
d_alt = (1 - d) %>% as.factor
)
ggplot(plot_data, aes(x = x, y = y, color = d)) + geom_point(size = 2) + geom_point(aes(x = x, y = y_alt, color = d_alt), alpha = 0.4, size = 3, stroke = 0, stat = 'unique') + theme_bw()
as.numeric(x)
as.numeric(d)
ggplot(plot_data, aes(x = x, y = as.numeric(d) -1)) + geom_jitter() + geom_smooth()
ggplot(plot_data, aes(x = x, y = as.numeric(d) -1)) + geom_jitter() + geom_smooth('lm')
ggplot(plot_data, aes(x = x, y = as.numeric(d) -1)) + geom_jitter() + geom_smooth(method = 'lm')
r_d = lm(d ~ x)$residuals
plot_data = data.table(x = x,
d = d %>% as.factor,
y = y,
y_alt = y_alt,
d_alt = (1 - d) %>% as.factor
r_d = r_d
plot_data = data.table(x = x,
d = d %>% as.factor,
y = y,
y_alt = y_alt,
d_alt = (1 - d) %>% as.factor,
r_d = r_d
)
plot_data = data.table(x = x,
d = d %>% as.factor,
y = y,
y_alt = y_alt,
d_alt = (1 - d) %>% as.factor,
var_d = r_d^2
)
ggplot(plot_data, aes(x = x, y = y, color = d)) + geom_point(size = 2) + geom_point(aes(x = x, y = y_alt, color = d_alt), alpha = 0.4, size = 3, stroke = 0, stat = 'unique') + theme_bw() + ggtitle("Interpolation Bias")
dens_data = plot_data[, list(raw = .N, adj = sum(var_d)) , by = x]
dens_data
dens_data = plot_data[, list(raw = .N/100, adj = (.N/100)*mean(var_d)) , by = x]
dens_data
dens_data[, adj := adj / sum(adj)]
dens_data
ggplot(plot_data, aes(x = x, y = y, color = d)) + geom_point(size = 2) + geom_point(aes(x = x, y = y_alt, color = d_alt), alpha = 0.4, size = 3, stroke = 0, stat = 'unique') + theme_bw() + ggtitle("Interpolation Bias")
setkey(dens_data, x)
?geom_line
ggplot(plot_data, aes(x = x, y = y, color = d)) + geom_point(size = 2) + geom_point(aes(x = x, y = y_alt, color = d_alt), alpha = 0.4, size = 3, stroke = 0, stat = 'unique') + theme_bw() + ggtitle("Interpolation Bias") +
geom_line(data = dens_data, aes(x = x, y = raw * 100)) +
geom_line(data = dens_data, aes(x = x, y = adj * 100))
?geom_line
ggplot(plot_data, aes(x = x, y = y, color = d)) + geom_point(size = 2) + geom_point(aes(x = x, y = y_alt, color = d_alt), alpha = 0.4, size = 3, stroke = 0, stat = 'unique') + theme_bw() + ggtitle("Interpolation Bias") +
geom_line(data = dens_data, aes(x = x, y = raw * 100), inherit.aes = F) +
geom_line(data = dens_data, aes(x = x, y = adj * 100), inherit.aes = F)
ggplot(plot_data, aes(x = x, y = y, color = d)) + geom_point(size = 2) + geom_point(aes(x = x, y = y_alt, color = d_alt), alpha = 0.4, size = 3, stroke = 0, stat = 'unique') + theme_bw() + ggtitle("Interpolation Bias") +
geom_line(data = dens_data, aes(x = x, y = raw * 100), inherit.aes = F) +
geom_line(data = dens_data, aes(x = x, y = adj * 100), inherit.aes = F, color = 'red')
require(data.table)
d = fread('/home/mdweaver/git/mdweaver.github.io/poli110/lecture_15/trump_rally_data.csv')
d$fips
View(d)
d$trumprallycount
d[trumprallycount > 0]
d$hate_crimes %>% tble
require(mmagrittr)
require(magrittr)
d$hate_crimes %>% table
d$log_pop
d[, list(trump_count = sum(trumprallycount),), by = fips]
d[, list(trump_count = sum(trumprallycount), hate_crimes = sum(hate_crimes), l_pop = log_pop[1]), by = fips]
d = d[, list(trump_count = sum(trumprallycount), hate_crimes = sum(hate_crimes), l_pop = log_pop[1]), by = fips]
d[, list(trump_count, hate_crimes)] %>% plot
d[, list(trump_count, hate_crimes/(exp(l_pop)))] %>% plot
d[, list(trump_count, hate_crimes/(exp(l_pop)))] %>% plot
d[, list(trump_count > 0, hate_crimes/(exp(l_pop)))] %>% plot
d[, list(trump_count, hate_crimes/(exp(l_pop)))] %>% plot
d[, list(trump_count, hate_crimes)] %>% plot
d = fread('/home/mdweaver/git/mdweaver.github.io/poli110/lecture_15/trump_rally_data.csv')
d$incidentcount
d$incidentcount %>% table
dd = d[, list(trump_count = sum(trumprallycount), hate_crimes = sum(hate_incidents), l_pop = log_pop[1]), by = fips]
dd = d[, list(trump_count = sum(trumprallycount), hate_crimes = sum(incidentcount), l_pop = log_pop[1]), by = fips]
dd[, list(trump_count, hate_crimes)] %>% plot
dd[, list(trump_count, hate_crimes/exp(log_pop))] %>% plot
dd[, list(trump_count, hate_crimes/exp(l_pop))] %>% plot
d[, list(trumprallycount, incidentcount)] %>% plot
d[, list(trumprallyever, incidentcount)] %>% plot
dd[, list(trump_count, hate_crimes)] %>% plot
dd = d[month %in% c("November", "December"), list(trump_count = sum(trumprallycount), hate_crimes = sum(incidentcount), l_pop = log_pop[1]), by = fips]
dd[, list(trump_count, hate_crimes)] %>% plot
dd = d[, list(trump_count = sum(trumprallycount), hate_crimes = sum(incidentcount), l_pop = log_pop[1]), by = fips]
dd[, list(trump_count, hate_crimes)] %>% plot
require(ggplot2)
dd[, list(trump_count, hate_crimes)] %>% (ggplot2(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() + geom_smooth())
dd[, list(trump_count, hate_crimes)] %>% (ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() + geom_smooth())
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() + geom_smooth()
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() + geom_smooth(method = 'loess')
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() + geom_smooth(method = 'gam')
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() + geom_smooth(method = 'loess')
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() + geom_smooth(method = 'lm')
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() +  geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = FALSE)
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() +  geom_smooth(method = lm, formula = y ~ splines::bs(x, 4), se = FALSE)
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() +  geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = FALSE)
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() +  geom_smooth(method = lm, formula = y ~ splines::bs(x, 2), se = FALSE)
dd[, list(trump_count, hate_crimes)] %>% ggplot(data = ., aes(x = trump_count, y = hate_crimes)) + geom_point() +  geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = FALSE)
ggplot(data, aes(x = trump_count, y = hate_crimes > 0 )) + geom_point() +  geom_smooth(method = lm, se = FALSE) +
xlab("Trump Rallies (Count)") +
ylab("Hate Crimes (Count)") +
ggtitle("Trump Rallies and Hate Crimes by County (2016)") +
theme_bw()
ggplot(dd, aes(x = trump_count, y = hate_crimes > 0 )) + geom_point() +  geom_smooth(method = lm, se = FALSE) +
xlab("Trump Rallies (Count)") +
ylab("Hate Crimes (Count)") +
ggtitle("Trump Rallies and Hate Crimes by County (2016)") +
theme_bw()
ggplot(data, aes(x = trump_count > 0, y = hate_crimes  )) + geom_point() +  geom_smooth(method = lm, se = FALSE) +
xlab("Trump Rallies (Count)") +
ylab("Hate Crimes (Count)") +
ggtitle("Trump Rallies and Hate Crimes by County (2016)") +
theme_bw()
ggplot(dd, aes(x = trump_count > 0, y = hate_crimes  )) + geom_point() +  geom_smooth(method = lm, se = FALSE) +
xlab("Trump Rallies (Count)") +
ylab("Hate Crimes (Count)") +
ggtitle("Trump Rallies and Hate Crimes by County (2016)") +
theme_bw()
ggplot(dd, aes(x = as.numeric(trump_count > 0), y = hate_crimes  )) + geom_point() +  geom_smooth(method = lm, se = FALSE) +
xlab("Trump Rallies (Count)") +
ylab("Hate Crimes (Count)") +
ggtitle("Trump Rallies and Hate Crimes by County (2016)") +
theme_bw()
228 + 54 + 116 + 72 + 255 + 156
127 + 211 + 85 + 206 + 63 + 285
977 - 881
102 + 44 + 40 + 31
78 + 42 + 37 + 48
#sag harbor
463
a= 1.5e10
as.character(a)
sprintf(a)
sprintf("%.f",a)
n = 100
x = rnorm(100)
e = rnorm(100)
y_star = 1.5 + 0.5 * x + e
y = pnorm(y_star)
y %>% hist
hist(y)
y_star = 05 + 0.5 * x + e
y_star = 0.5 + 0.5 * x + e
hist(y)
y = pnorm(y_star)
hist(y)
plot(x, y)
plot(x, y > 0.5)
y_hat = lm(y ~ x)$residuals
plot(x, y_hat)
y_star = 0.5 * x + e
y = pnorm(y_star)
plot(x, y_hat)
y_hat = lm(y ~ x)$residuals
plot(x, y_hat)
plot(x, y)
plot(x, y)
t
y
plot(x, y_Star)
plot(x, y_star)
y = y_star > 0.5
plot(x, y)
abline(lm(y~x))
weighted.mean(c(0.1,0.05), c(400,100))
weighted.mean(c(0.1 - 0.01,0.05 - 0.01), c(400,100))
weighted.mean(c(0.1 - 0.01,0.05 - 0.005), c(400,100))
weighted.mean(c(0.01,0.005), c(100,400))
0.09 - 0.006
weighted.mean(c(0.1 - 0.01,0.05 - 0.005), c(500,500))
weighted.mean(c(0.01 - 0.1,0.005 - 0.05), c(500,500))
weighted.mean(c(0.01,0.005), c(100,400))
.8 * 100 + .2*400
.2 * 100 + .8*400
weighted.mean(c(0.1, 0.005), c(.8 * 100, .2*400))
weighted.mean(c(0.01, 0.005), c(.8 * 100, .2*400))
weighted.mean(c(0.01, 0.005), c(.2 * 100, .8*400))
weighted.mean(c(0.05, 0.1), c(.2 * 100, .8*400))
weighted.mean(c(0.05, 0.1), c(.8 * 100, .2*400))
.6 * 100 + .4*400
.4 * 100 + .6*400
weighted.mean(c(0.05, 0.1), c(.6 * 100, .4*400))
weighted.mean(c(0.05, 0.1), c(.4 * 100, .6*400))
weighted.mean(c(0.005, 0.01), c(.4 * 100, .6*400))
weighted.mean(c(0.01, 0.005), c(.4 * 100, .6*400))
weighted.mean(c(0.01, 0.005), c(.6 * 100, .4*400))
seq.Date(as.Date('2020-05-15', ))
seq.Date(as.Date('2020-05-15', '2020-08-13'))
seq.Date(as.Date('2020-05-15', '2020-08-13', 'day'))
seq.Date(as.Date('2020-05-15'), as.Date('2020-08-13'), 'day')
weighted.mean(c(0.01, 0.005), c(.6 * 100, .4*400))
weighted.mean(c(0.05, 0.1), c(.6 * 100, .4*400))
weighted.mean(c(0.005 - 0.05, 0.01 - 0.1))
weighted.mean(c(0.01, 0.005), c( 100, 400))
weighted.mean(c(0.05, 0.1), c( 100, 400))
.006 - 0.09
set.seed(1234)
n = 100
x = rnorm(100)
e = rnorm(100)
y_star = 0 + 0.5*x + e
y = pnorm(y_star)
plot(x, y)
pnorm(y_star)
setwd('/home/mdweaver/git/mdweaver.github.io/poli572b/lecture_9')
require(data.table)
setwd('/home/mdweaver/git/mdweaver.github.io/poli572b/lecture_11')
riots = fread("analysisPanelBW1.csv")
riots
riots = riots[rd_INC_closenum %in% 1,
list(DISTRICT_ID_61, election_year,
rd_INC_ivnum, COUNT.bin,
ENP)]
riots = riots[rd_INC_closenum %in% 1,
list(DISTRICT_ID_61, election_year,
INC_win = rd_INC_ivnum, riot_count = COUNT.bin,
ENP)]
riots = fread("analysisPanelBW1.csv")
riots = riots[rd_INC_closenum %in% 1,
list(DISTRICT_ID_61, election_year,
INC_win = rd_INC_ivnum, riot_count = COUNT.bin,
ENP)]
riots = fread("analysisPanelBW1.csv")
riots = riots[rd_INC_closenum %in% 1,
list(DISTRICT_ID_61, election_year,
INC_win = rd_INC_ivnum, any_riot = COUNT.bin,
ENP)]
m1 = lm(any_riot ~ INC_win, data = riots)
?stargazer
require(stargazer)
?stargazer
require(magrittr)
m1 = lm(any_riot ~ INC_win, data = riots)
stargazer(m1, se = vcovHC(m1) %>% diag %>% sqrt, type = 'html')
require(sandwich)
m1 = lm(any_riot ~ INC_win, data = riots)
stargazer(m1, se = vcovHC(m1) %>% diag %>% sqrt, type = 'html')
riots$INC_win
riots[, list(INC_win)]
riots[, list(INC_win, any_riot)] %>% table
lm(any_riot ~ INC_win, riots) %>% summary
riots[, high_enp := ENP > median(ENP,na.rm = T)]
lm(any_riot ~ INC_win*high_enp, riots) %>% summary
?scale
a = c(1,2,3,NA)
scale(a)
scale(a, scale = F)
require(interflex)
?inter.binning
?stargazer
require(stargazer)
