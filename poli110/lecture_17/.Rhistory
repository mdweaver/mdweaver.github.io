theme(legend.position = 'none')
p$data
p$data[15, c("direction", "to", "xend", "yend")] = as.list(rep(NA, 4))
p
dagify(
covid ~ mandate,
mandate ~ positives ,
exposure = "mandate",
outcome = 'covid',
labels = c("mandate" = "Mask\nMandate",
"covid" = "COVID\nCases",
"positives" = "Test\nPositivity"
)
)  %>%
ggdag_classic(layout = 'auto', text_label = 'label', size = 5) + theme_dag() +
theme(legend.position = 'none')
dagify(
covid ~ mandate,
mandate ~ positives,
test_no ~ positives,
exposure = "mandate",
outcome = 'covid',
labels = c("mandate" = "Mask\nMandate",
"covid" = "COVID\nCases",
"positives" = "Test\nPositivity",
'test_no' = "Number\nof Tests"
)
)  %>%
ggdag_classic(layout = 'auto', text_label = 'label', size = 5) + theme_dag() +
theme(legend.position = 'none')
dagify(
covid ~ mandate,
mandate ~ positives,
test_no ~ positives,
exposure = "mandate",
outcome = 'covid',
labels = c("mandate" = "Mask\nMandate",
"covid" = "COVID\nCases",
"positives" = "Test\nPositivity",
'test_no' = "Number\nof Tests"
)
)  %>%
ggdag_classic(layout = 'auto', text_label = 'label', size = 5) + theme_dag() +
theme(legend.position = 'none') +
scale_adjusted()
dagify(
covid ~ mandate,
mandate ~ positives ,
exposure = "mandate",
outcome = 'covid',
labels = c("mandate" = "Mask\nMandate",
"covid" = "COVID\nCases",
"positives" = "Test\nPositivity"
)
)  %>%
tidy_dagitty(layout='auto') %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges_link() +
geom_dag_text(mapping = aes(label = label), colour = 'black') +
theme_dag() +
scale_adjusted()
dagify(
covid ~ mandate,
mandate ~ positives,
test_no ~ positives,
exposure = "mandate",
outcome = 'covid',
labels = c("mandate" = "Mask\nMandate",
"covid" = "COVID\nCases",
"positives" = "Test\nPositivity",
'test_no' = "Number\nof Tests"
)
)  %>%
tidy_dagitty(layout='auto') %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges_link() +
geom_dag_text(mapping = aes(label = label), colour = 'black') +
theme_dag() +
scale_adjusted()
dagify(
covid ~ mandate + stay_home,
mandate ~ positives,
test_no ~ positives,
stay_home ~ positives,
exposure = "mandate",
outcome = 'covid',
labels = c("mandate" = "Mask\nMandate",
"covid" = "COVID\nCases",
"positives" = "Test\nPositivity",
'test_no' = "Number\nof Tests",
'stay_home' = "Stay\nHome"
)
)  %>%
tidy_dagitty(layout='auto') %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges_link() +
geom_dag_text(mapping = aes(label = label), colour = 'black') +
theme_dag() +
scale_adjusted()
dagify(
covid ~ mandate + superspreader,
mandate ~ positives,
test_no ~ positives,
test_no ~ superspreader,
exposure = "mandate",
outcome = 'covid',
labels = c("mandate" = "Mask\nMandate",
"covid" = "COVID\nCases",
"positives" = "Test\nPositivity",
'test_no' = "Number\nof Tests",
"superspreader" = "Super\nSpreader"
)
)  %>%
tidy_dagitty(layout='auto') %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges_link() +
geom_dag_text(mapping = aes(label = label), colour = 'black') +
theme_dag() +
scale_adjusted()
dagify(
covid ~ positives,
positives ~  mandate,
exposure = "mandate",
outcome = 'covid',
labels = c("mandate" = "Mask\nMandate",
"covid" = "COVID\nCases",
"positives" = "Mask\nWearing"
)
)  %>%
tidy_dagitty(layout='auto') %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_edges_link() +
geom_dag_text(mapping = aes(label = label), colour = 'black') +
theme_dag() +
scale_adjusted()
knitr::opts_chunk$set(echo = FALSE)
require(haven)
require(data.table)
require(ggplot2)
require(magrittr)
require(ggdag)
g = fread("./midterm_grades.csv")
g
ggplot(g, aes(x = midterm)) + geom_histogram()
g = fread("./midterm_grades.csv")
ggplot(g, aes(x = midterm)) + geom_histogram() + theme_bw()
g = fread("./midterm_grades.csv")
ggplot(g, aes(x = midterm)) +
geom_histogram() + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
?cut
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"))]
cutpoints = c(0.5, 0.55, 0.6, 0.64, 0.68, 0.72, 0.76, 0.8, 0.85, 0.9)
g = fread("./midterm_grades.csv")
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"))]
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), include.lowest = T)]
cutpoints = c(0, 0.5, 0.55, 0.6, 0.64, 0.68, 0.72, 0.76, 0.8, 0.85, 0.9, 1)
g = fread("./midterm_grades.csv")
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"))]
g
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), include.lowest = T)]
g
ggplot(g, aes(x = grade)) +
geom_histogram() + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
ggplot(g, aes(x = grade)) +
geom_bar() + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
ecdf(g$grade)
ecdf(g$grade)(g$grade)
ecdf(g$grade) %>% plot
ecdf(g$midterm) %>% plot
ggplot(g, aes(x = grade)) +
stat_ecdf() + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
ggplot(g, aes(x = midterm)) +
stat_ecdf() + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
cutpoints %>% tail(-1)
g_cut = data.table(start = (cutpoints %>% head(-1))*25,
end = (cutpoints %>% tail(-1)) * 25)
g_cut
g_cut = data.table(start = (cutpoints %>% head(-1))*25,
end = (cutpoints %>% tail(-1)) * 25,
labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+")
)
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3)
g_cut = data.table(start = (cutpoints %>% head(-1))*25,
end = (cutpoints %>% tail(-1)) * 25,
grade = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+")
)
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3)
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) + theme_bw()
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score") +
ylab("Fraction with score > than X")
g_cut = data.table(start = (cutpoints %>% head(-1))*25,
end = (cutpoints %>% tail(-1)) * 25,
grade = factor(c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), levels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"))
)
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score") +
ylab("Fraction with score > than X")
?scale_color_brewer
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) +
scale_fill_brewer() +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score") +
ylab("Fraction with score > than X")
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) +
scale_fill_viridis() +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score") +
ylab("Fraction with score > than X")
---
title: "POLI 110: Confounding"
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) +
scale_fill_viridis_b() +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score") +
ylab("Fraction with score > than X")
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) +
scale_fill_viridis_c() +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score") +
ylab("Fraction with score > than X")
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) +
scale_fill_viridis_f() +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score") +
ylab("Fraction with score > than X")
ggplot(g[!is.na(midterm)], aes(x = midterm)) +
geom_rect(data = g_cut, aes(xmin = start , xmax = end, ymin = -Inf, ymax = Inf, fill = grade),
inherit.aes=FALSE, alpha = 0.3) +
scale_fill_viridis_d() +
geom_step(aes(y = 1 - ..y..), stat='ecdf') + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score") +
ylab("Fraction with score > than X")
cutpoints = c(0, 0.5, 0.55, 0.6, 0.64, 0.68, 0.72, 0.76, 0.8, 0.85, 0.9, 1)
g_cut = data.table(start = (cutpoints %>% head(-1))*25,
end = (cutpoints %>% tail(-1)) * 25,
grade = factor(c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), levels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"))
)
g = fread("./midterm_grades.csv")
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), include.lowest = T)]
ggplot(g, aes(x = midterm)) +
geom_histogram() + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
cutpoints = c(0, 0.5, 0.55, 0.6, 0.64, 0.68, 0.72, 0.76, 0.8, 0.85, 0.9, 1)
g_cut = data.table(start = (cutpoints %>% head(-1))*25,
end = (cutpoints %>% tail(-1)) * 25,
grade = factor(c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), levels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"))
)
g = fread("./midterm_grades.csv")
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), include.lowest = T)]
ggplot(g, aes(x = midterm, colour = grade)) +
geom_histogram() + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
cutpoints = c(0, 0.5, 0.55, 0.6, 0.64, 0.68, 0.72, 0.76, 0.8, 0.85, 0.9, 1)
g_cut = data.table(start = (cutpoints %>% head(-1))*25,
end = (cutpoints %>% tail(-1)) * 25,
grade = factor(c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), levels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"))
)
g = fread("./midterm_grades.csv")
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), include.lowest = T)]
ggplot(g, aes(x = midterm, fill = grade)) +
geom_histogram() + theme_bw() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
cutpoints = c(0, 0.5, 0.55, 0.6, 0.64, 0.68, 0.72, 0.76, 0.8, 0.85, 0.9, 1)
g_cut = data.table(start = (cutpoints %>% head(-1))*25,
end = (cutpoints %>% tail(-1)) * 25,
grade = factor(c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), levels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"))
)
g = fread("./midterm_grades.csv")
g[, grade := cut(midterm, 25*cutpoints, right = F, labels = c("F", "D", "C-", "C", "C+", "B-", "B", "B+", "A-", "A", "A+"), include.lowest = T)]
ggplot(g, aes(x = midterm, fill = grade)) +
geom_histogram() + theme_bw() +    scale_fill_viridis_d() +
ggtitle("Midterm Grade Distribution") +
xlab("Score")
dagify(guns ~ hunting,
contact ~ popden,
crime ~ contact,
hunting ~ popden,
crime ~ guns,
exposure = "guns",
outcome = 'crime',
labels = c('guns' = "(X) Gun\nOwnership",
'contact' = '# of Interactions',
'crime' = "(Y) Murder\nRate",
'hunting' = 'Hunting',
'popden' = 'Population\nDensity')) %>%
tidy_dagitty(layout='tree') %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
#geom_dag_node() +
geom_dag_edges_link(mapping = aes(label = c('1', '2', '3', '4', '5', '6')),  angle_calc = "along", label_dodge = unit(c(1,-1,1,-1,1,1),'lines')) +
geom_dag_text(mapping = aes(label = label), colour = 'black') +
theme_dag() +
scale_adjusted()
dagify(guns ~ hunting,
contact ~ popden,
crime ~ contact,
hunting ~ popden,
crime ~ guns,
exposure = "guns",
outcome = 'crime',
labels = c('guns' = "(X) Gun\nOwnership",
'contact' = '# of Interactions',
'crime' = "(Y) Murder\nRate",
'hunting' = 'Hunting',
'popden' = 'Population\nDensity')) %>%
tidy_dagitty(layout='tree') %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
#geom_dag_node() +
geom_dag_edges_link(mapping = aes(label = c('1', '2', '3', '4', '5', '6')),  angle_calc = "along", label_dodge = unit(c(1,-1,1,-1,1,1),'lines')) +
geom_dag_text(mapping = aes(label = label), colour = 'black') +
theme_dag() +
scale_adjusted()
shiny::runApp('~/Dropbox/POLI110/shiny_experiment')
runApp('~/Dropbox/POLI110/shiny_experiment')
library(shiny)
library(shiny.tailwind)
library(ggplot2)
library(glue)
require(httr)
require(data.table)
require(magrittr)
require(readxl)
#Get Data
export = POST("https://api.mentimeter.com/export/alfnkdovta2xkht5qgztobpgg8hj89xw",
add_headers('Authorization' = 'Bearer 8II5eD5E5asaA6PdFfwyoRiO3XneAPSBJO7LaGSvMaY.3049889',
'Accept' = 'application/json',
'Connection' = 'keep-alive',
'DNT' = 1,
'Host' = 'api.mentimeter.com',
'Origin' = 'https://www.mentimeter.com',
'Referer' = 'https://www.mentimeter.com/',
'Sec-Fetch-Dest' = 'empty',
'Sec-Fetch-Mode' = 'cors',
'Sec-Fetch-Site' = 'same-site',
'User-Agent' = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/109.0'))
Sys.sleep(1)
export = GET("https://api.mentimeter.com/export/alfnkdovta2xkht5qgztobpgg8hj89xw",
add_headers('Authorization' = 'Bearer 8II5eD5E5asaA6PdFfwyoRiO3XneAPSBJO7LaGSvMaY.3049889',
'Accept' = 'application/json',
'Connection' = 'keep-alive',
'DNT' = 1,
'Host' = 'api.mentimeter.com',
'Origin' = 'https://www.mentimeter.com',
'Referer' = 'https://www.mentimeter.com/',
'Sec-Fetch-Dest' = 'empty',
'Sec-Fetch-Mode' = 'cors',
'Sec-Fetch-Site' = 'same-site',
'User-Agent' = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/109.0'))
export_out =content(export, "parsed")
cat(export_out$url)
xlsx_out = GET(export_out$url)
tmp = tempfile(fileext = '.xlsx')
writeBin(xlsx_out$content, tmp)
data = readxl::read_excel(tmp, skip = 2) %>% as.data.table
data
#Get Data
export = POST("https://api.mentimeter.com/export/almzri9coa2at5i6oo4z57bzo2j4oo31",
add_headers('Authorization' = 'Bearer 8II5eD5E5asaA6PdFfwyoRiO3XneAPSBJO7LaGSvMaY.3049889',
'Accept' = 'application/json',
'Connection' = 'keep-alive',
'DNT' = 1,
'Host' = 'api.mentimeter.com',
'Origin' = 'https://www.mentimeter.com',
'Referer' = 'https://www.mentimeter.com/',
'Sec-Fetch-Dest' = 'empty',
'Sec-Fetch-Mode' = 'cors',
'Sec-Fetch-Site' = 'same-site',
'User-Agent' = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/109.0'))
Sys.sleep(1)
export = GET("https://api.mentimeter.com/export/almzri9coa2at5i6oo4z57bzo2j4oo31",
add_headers('Authorization' = 'Bearer 8II5eD5E5asaA6PdFfwyoRiO3XneAPSBJO7LaGSvMaY.3049889',
'Accept' = 'application/json',
'Connection' = 'keep-alive',
'DNT' = 1,
'Host' = 'api.mentimeter.com',
'Origin' = 'https://www.mentimeter.com',
'Referer' = 'https://www.mentimeter.com/',
'Sec-Fetch-Dest' = 'empty',
'Sec-Fetch-Mode' = 'cors',
'Sec-Fetch-Site' = 'same-site',
'User-Agent' = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/109.0'))
export_out =content(export, "parsed")
cat(export_out$url)
xlsx_out = GET(export_out$url)
tmp = tempfile(fileext = '.xlsx')
writeBin(xlsx_out$content, tmp)
data = readxl::read_excel(tmp, skip = 2) %>% as.data.table
y1 = (data[[4]] %in% "Yes")*1
y0 = (data[[5]] %in% "Yes")*1
d = (data[[6]] %in% "Yes")
y1
y0
data
runApp('~/Dropbox/POLI110/shiny_experiment')
#Get Data
export = POST("https://api.mentimeter.com/export/e789a9ce6276b9aa8f508044b5f1bd11",
add_headers('Authorization' = 'Bearer 8II5eD5E5asaA6PdFfwyoRiO3XneAPSBJO7LaGSvMaY.3049889',
'Accept' = 'application/json',
'Connection' = 'keep-alive',
'DNT' = 1,
'Host' = 'api.mentimeter.com',
'Origin' = 'https://www.mentimeter.com',
'Referer' = 'https://www.mentimeter.com/',
'Sec-Fetch-Dest' = 'empty',
'Sec-Fetch-Mode' = 'cors',
'Sec-Fetch-Site' = 'same-site',
'User-Agent' = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/109.0'))
Sys.sleep(1)
export = GET("https://api.mentimeter.com/export/e789a9ce6276b9aa8f508044b5f1bd11",
add_headers('Authorization' = 'Bearer 8II5eD5E5asaA6PdFfwyoRiO3XneAPSBJO7LaGSvMaY.3049889',
'Accept' = 'application/json',
'Connection' = 'keep-alive',
'DNT' = 1,
'Host' = 'api.mentimeter.com',
'Origin' = 'https://www.mentimeter.com',
'Referer' = 'https://www.mentimeter.com/',
'Sec-Fetch-Dest' = 'empty',
'Sec-Fetch-Mode' = 'cors',
'Sec-Fetch-Site' = 'same-site',
'User-Agent' = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/109.0'))
export_out =content(export, "parsed")
cat(export_out$url)
xlsx_out = GET(export_out$url)
tmp = tempfile(fileext = '.xlsx')
writeBin(xlsx_out$content, tmp)
data = readxl::read_excel(tmp, skip = 2) %>% as.data.table
data
data$Date
year(data$Date)
year(Sys.Date())
data = data[year(Date) %in% year(Sys.Date())]
data
data
names(data)
data[, 4]
data[, 4] %>% table
data[, 5] %>% table
data[, 6] %>% table
data[, 6]
data[, 7]
data[, 4:5]
data[, list(4,5)]
data[, c(4,5)]
data[, 6]
data[, 6]  %>% table
data[, 4]  %>% table
data[, lapply(.SD, function(x) x %in% "Imagine... if you had a friend who identifies as trans/non-binary..."), .SDcols = c(4,5)]
data[, rowSums(lapply(.SD, function(x) x %in% "Imagine... if you had a friend who identifies as trans/non-binary...")), .SDcols = c(4,5)]
data[, rowSum(lapply(.SD, function(x) x %in% "Imagine... if you had a friend who identifies as trans/non-binary...")), .SDcols = c(4,5)]
data[, +(Reduce(`|`, lapply(.SD, \(x) x %in% "Imagine... if you had a friend who identifies as trans/non-binary...")), .SDcols = c(4,5)]
data[, +(Reduce(`|`, lapply(.SD, function(x) x %in% "Imagine... if you had a friend who identifies as trans/non-binary..."))), .SDcols = c(4,5)]
sum(data[[4]] %in% "Imagine... if you had a friend who identifies as trans/non-binary...")
sum(data[[5]] %in% "Imagine... if you had a friend who identifies as trans/non-binary...")
62 + 25
data[, +(Reduce(`|`, lapply(.SD, function(x) x %in% "Imagine... if you had a friend who identifies as trans/non-binary..."))), .SDcols = c(4,5)] %>% sum()
data[, +(Reduce(`|`, lapply(.SD, function(x) x %in% "Imagine... if you did not have a friend who identifies as trans/non-binary..."))), .SDcols = c(4,5)]
data[[6]]
data[[7]]
runApp('~/Dropbox/POLI110/shiny_experiment')
runApp('~/Dropbox/POLI110/shiny_experiment')
runApp('~/Dropbox/POLI110/shiny_experiment')
?p
runApp('~/Dropbox/POLI110/shiny_experiment')
?xlim
runApp('~/Dropbox/POLI110/shiny_experiment')
